// Code generated by protoc-gen-go. DO NOT EDIT.
// source: row.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ColumnValue struct {
	Val                  []byte   `protobuf:"bytes,1,opt,name=Val,proto3" json:"Val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ColumnValue) Reset()         { *m = ColumnValue{} }
func (m *ColumnValue) String() string { return proto.CompactTextString(m) }
func (*ColumnValue) ProtoMessage()    {}
func (*ColumnValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbfce2cce8f2e8cd, []int{0}
}

func (m *ColumnValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnValue.Unmarshal(m, b)
}
func (m *ColumnValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnValue.Marshal(b, m, deterministic)
}
func (m *ColumnValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnValue.Merge(m, src)
}
func (m *ColumnValue) XXX_Size() int {
	return xxx_messageInfo_ColumnValue.Size(m)
}
func (m *ColumnValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnValue.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnValue proto.InternalMessageInfo

func (m *ColumnValue) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

type ColumnInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Type                 uint32   `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Collation            string   `protobuf:"bytes,3,opt,name=Collation,proto3" json:"Collation,omitempty"`
	RawType              string   `protobuf:"bytes,4,opt,name=RawType,proto3" json:"RawType,omitempty"`
	IsAuto               uint32   `protobuf:"varint,5,opt,name=IsAuto,proto3" json:"IsAuto,omitempty"`
	IsUnsigned           uint32   `protobuf:"varint,6,opt,name=IsUnsigned,proto3" json:"IsUnsigned,omitempty"`
	IsVirtual            uint32   `protobuf:"varint,7,opt,name=IsVirtual,proto3" json:"IsVirtual,omitempty"`
	FixedSize            uint32   `protobuf:"varint,8,opt,name=FixedSize,proto3" json:"FixedSize,omitempty"`
	MaxSize              uint32   `protobuf:"varint,9,opt,name=MaxSize,proto3" json:"MaxSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ColumnInfo) Reset()         { *m = ColumnInfo{} }
func (m *ColumnInfo) String() string { return proto.CompactTextString(m) }
func (*ColumnInfo) ProtoMessage()    {}
func (*ColumnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbfce2cce8f2e8cd, []int{1}
}

func (m *ColumnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnInfo.Unmarshal(m, b)
}
func (m *ColumnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnInfo.Marshal(b, m, deterministic)
}
func (m *ColumnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnInfo.Merge(m, src)
}
func (m *ColumnInfo) XXX_Size() int {
	return xxx_messageInfo_ColumnInfo.Size(m)
}
func (m *ColumnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnInfo proto.InternalMessageInfo

func (m *ColumnInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ColumnInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ColumnInfo) GetCollation() string {
	if m != nil {
		return m.Collation
	}
	return ""
}

func (m *ColumnInfo) GetRawType() string {
	if m != nil {
		return m.RawType
	}
	return ""
}

func (m *ColumnInfo) GetIsAuto() uint32 {
	if m != nil {
		return m.IsAuto
	}
	return 0
}

func (m *ColumnInfo) GetIsUnsigned() uint32 {
	if m != nil {
		return m.IsUnsigned
	}
	return 0
}

func (m *ColumnInfo) GetIsVirtual() uint32 {
	if m != nil {
		return m.IsVirtual
	}
	return 0
}

func (m *ColumnInfo) GetFixedSize() uint32 {
	if m != nil {
		return m.FixedSize
	}
	return 0
}

func (m *ColumnInfo) GetMaxSize() uint32 {
	if m != nil {
		return m.MaxSize
	}
	return 0
}

type Row struct {
	Server               string   `protobuf:"bytes,1,opt,name=Server,proto3" json:"Server,omitempty"`
	DB                   string   `protobuf:"bytes,2,opt,name=DB,proto3" json:"DB,omitempty"`
	Table                string   `protobuf:"bytes,3,opt,name=Table,proto3" json:"Table,omitempty"`
	Val                  []byte   `protobuf:"bytes,4,opt,name=Val,proto3" json:"Val,omitempty"`
	ColumnCount          uint32   `protobuf:"varint,5,opt,name=ColumnCount,proto3" json:"ColumnCount,omitempty"`
	PKColumns            []uint32 `protobuf:"varint,6,rep,packed,name=PKColumns,proto3" json:"PKColumns,omitempty"`
	Action               string   `protobuf:"bytes,7,opt,name=Action,proto3" json:"Action,omitempty"`
	Timestamp            uint64   `protobuf:"varint,8,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	ColumnBitmap1        []byte   `protobuf:"bytes,9,opt,name=ColumnBitmap1,proto3" json:"ColumnBitmap1,omitempty"`
	ColumnBitmap2        []byte   `protobuf:"bytes,10,opt,name=ColumnBitmap2,proto3" json:"ColumnBitmap2,omitempty"`
	ColumnType           []byte   `protobuf:"bytes,11,opt,name=ColumnType,proto3" json:"ColumnType,omitempty"`
	ColumnMeta           []uint32 `protobuf:"varint,12,rep,packed,name=ColumnMeta,proto3" json:"ColumnMeta,omitempty"`
	NeedBitmap2          uint32   `protobuf:"varint,13,opt,name=NeedBitmap2,proto3" json:"NeedBitmap2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbfce2cce8f2e8cd, []int{2}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *Row) GetDB() string {
	if m != nil {
		return m.DB
	}
	return ""
}

func (m *Row) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *Row) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *Row) GetColumnCount() uint32 {
	if m != nil {
		return m.ColumnCount
	}
	return 0
}

func (m *Row) GetPKColumns() []uint32 {
	if m != nil {
		return m.PKColumns
	}
	return nil
}

func (m *Row) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Row) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Row) GetColumnBitmap1() []byte {
	if m != nil {
		return m.ColumnBitmap1
	}
	return nil
}

func (m *Row) GetColumnBitmap2() []byte {
	if m != nil {
		return m.ColumnBitmap2
	}
	return nil
}

func (m *Row) GetColumnType() []byte {
	if m != nil {
		return m.ColumnType
	}
	return nil
}

func (m *Row) GetColumnMeta() []uint32 {
	if m != nil {
		return m.ColumnMeta
	}
	return nil
}

func (m *Row) GetNeedBitmap2() uint32 {
	if m != nil {
		return m.NeedBitmap2
	}
	return 0
}

type RowMessage struct {
	Rows                 []*Row   `protobuf:"bytes,1,rep,name=Rows,proto3" json:"Rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RowMessage) Reset()         { *m = RowMessage{} }
func (m *RowMessage) String() string { return proto.CompactTextString(m) }
func (*RowMessage) ProtoMessage()    {}
func (*RowMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbfce2cce8f2e8cd, []int{3}
}

func (m *RowMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RowMessage.Unmarshal(m, b)
}
func (m *RowMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RowMessage.Marshal(b, m, deterministic)
}
func (m *RowMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RowMessage.Merge(m, src)
}
func (m *RowMessage) XXX_Size() int {
	return xxx_messageInfo_RowMessage.Size(m)
}
func (m *RowMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RowMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RowMessage proto.InternalMessageInfo

func (m *RowMessage) GetRows() []*Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

func init() {
	proto.RegisterType((*ColumnValue)(nil), "proto.ColumnValue")
	proto.RegisterType((*ColumnInfo)(nil), "proto.ColumnInfo")
	proto.RegisterType((*Row)(nil), "proto.Row")
	proto.RegisterType((*RowMessage)(nil), "proto.RowMessage")
}

func init() { proto.RegisterFile("row.proto", fileDescriptor_dbfce2cce8f2e8cd) }

var fileDescriptor_dbfce2cce8f2e8cd = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x8b, 0xdb, 0x30,
	0x10, 0xc5, 0xf1, 0x9f, 0x38, 0xf5, 0x24, 0x29, 0x45, 0x94, 0xa2, 0x43, 0x69, 0x8d, 0xe9, 0x21,
	0x87, 0x12, 0x68, 0xfa, 0x09, 0xf2, 0x87, 0x82, 0x29, 0x09, 0x45, 0x49, 0x73, 0x57, 0x1a, 0x35,
	0x18, 0x6c, 0xcb, 0x58, 0x72, 0x9d, 0xf6, 0x9b, 0x77, 0x4f, 0x8b, 0x46, 0x76, 0xec, 0xdd, 0x3d,
	0x59, 0xf3, 0x7b, 0x23, 0x69, 0xde, 0x93, 0x21, 0xac, 0x64, 0xb3, 0x28, 0x2b, 0xa9, 0x25, 0x19,
	0xe1, 0x27, 0xfe, 0x08, 0x93, 0x8d, 0xcc, 0xea, 0xbc, 0x38, 0xf1, 0xac, 0x16, 0xe4, 0x0d, 0x78,
	0x27, 0x9e, 0x51, 0x27, 0x72, 0xe6, 0x53, 0x66, 0x96, 0xf1, 0x83, 0x03, 0x60, 0x3b, 0x92, 0xe2,
	0xb7, 0x24, 0x04, 0xfc, 0x3d, 0xcf, 0x05, 0x76, 0x84, 0x0c, 0xd7, 0x86, 0x1d, 0xff, 0x96, 0x82,
	0xba, 0x91, 0x33, 0x9f, 0x31, 0x5c, 0x93, 0xf7, 0x10, 0x6e, 0x64, 0x96, 0x71, 0x9d, 0xca, 0x82,
	0x7a, 0xd8, 0xdc, 0x03, 0x42, 0x61, 0xcc, 0x78, 0x83, 0x9b, 0x7c, 0xd4, 0xba, 0x92, 0xbc, 0x83,
	0x20, 0x51, 0xab, 0x5a, 0x4b, 0x3a, 0xc2, 0xd3, 0xda, 0x8a, 0x7c, 0x00, 0x48, 0xd4, 0xcf, 0x42,
	0xa5, 0xd7, 0x42, 0x5c, 0x68, 0x80, 0xda, 0x80, 0x98, 0xfb, 0x12, 0x75, 0x4a, 0x2b, 0x5d, 0xf3,
	0x8c, 0x8e, 0x51, 0xee, 0x81, 0x51, 0xbf, 0xa5, 0x37, 0x71, 0x39, 0xa4, 0xff, 0x04, 0x7d, 0x65,
	0xd5, 0x3b, 0x30, 0xd3, 0xec, 0xf8, 0x0d, 0xb5, 0x10, 0xb5, 0xae, 0x8c, 0xff, 0xbb, 0xe0, 0x31,
	0xd9, 0x98, 0xa9, 0x0e, 0xa2, 0xfa, 0x23, 0xaa, 0xd6, 0x77, 0x5b, 0x91, 0xd7, 0xe0, 0x6e, 0xd7,
	0xe8, 0x3b, 0x64, 0xee, 0x76, 0x4d, 0xde, 0xc2, 0xe8, 0xc8, 0xcf, 0x99, 0x68, 0x1d, 0xdb, 0xa2,
	0x0b, 0xd5, 0xbf, 0x87, 0x4a, 0xa2, 0x2e, 0xf5, 0x8d, 0xac, 0x0b, 0xdd, 0x5a, 0x1d, 0x22, 0x33,
	0xf1, 0x8f, 0xef, 0x16, 0x28, 0x1a, 0x44, 0x9e, 0x99, 0xf8, 0x0e, 0xcc, 0x3c, 0xab, 0x5f, 0x18,
	0xed, 0xd8, 0xce, 0x63, 0x2b, 0xb3, 0xeb, 0x98, 0xe6, 0x42, 0x69, 0x9e, 0x97, 0xe8, 0xd3, 0x67,
	0x3d, 0x20, 0x9f, 0x60, 0x66, 0x0f, 0x58, 0xa7, 0x3a, 0xe7, 0xe5, 0x17, 0x74, 0x3b, 0x65, 0x4f,
	0xe1, 0xf3, 0xae, 0x25, 0x85, 0x97, 0x5d, 0x4b, 0xf3, 0x1e, 0x16, 0xe0, 0x23, 0x4e, 0xb0, 0x65,
	0x40, 0x7a, 0x7d, 0x27, 0x34, 0xa7, 0x53, 0x34, 0x30, 0x20, 0x26, 0x81, 0xbd, 0x10, 0x97, 0xee,
	0x8e, 0x99, 0x4d, 0x60, 0x80, 0xe2, 0xcf, 0x00, 0x4c, 0x36, 0x3b, 0xa1, 0x14, 0xbf, 0x9a, 0xf3,
	0x7c, 0x26, 0x1b, 0x45, 0x9d, 0xc8, 0x9b, 0x4f, 0x96, 0x60, 0x7f, 0xe2, 0x05, 0x93, 0x0d, 0x43,
	0x7e, 0x0e, 0x10, 0x7c, 0x7d, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x71, 0xf0, 0x9b, 0xe2, 0x02,
	0x00, 0x00,
}
